<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cn.xmf.service.msg.dao.WxUserMessageDao">


	<sql id="wxUserMessageColumns">
		a.id AS "id",
		a.openid AS "openid",
		a.type AS "type",
		a.content AS "content",
		a.photourl AS "photourl",
		a.createtime AS "createtime",
		a.updatetime AS "updatetime",
		a.flag AS "flag",
		a.remark AS "remark",
		a.nickname AS "nickname",
		a.bizid AS "bizid"
	</sql>

	<sql id="wxUserMessageJoins">
	</sql>

	<select id="getWxUserMessageById" resultType="com.cn.xmf.model.msg.WxUserMessage">
		SELECT
			<include refid="wxUserMessageColumns"/>
		FROM t_wx_user_message a
		<include refid="wxUserMessageJoins"/>
		WHERE a.id = #{id}
	</select>

	<select id="getTotalCount" resultType="Integer" parameterType="com.alibaba.fastjson.JSONObject">
		SELECT
			count(*) as count
		FROM t_wx_user_message a
		<include refid="wxUserMessageJoins"/>
		<where>
			<if test="openid != null and openid != ''">
				AND a.openid = #{openid}
			</if>
			<if test="type != null and type != ''">
				AND a.type = #{type}
			</if>
			<if test="bizid != null and bizid != ''">
				AND a.bizid = #{bizid}
			</if>
			and flag=#{flag}
		</where>
	</select>

	<select id="getList" resultType="com.cn.xmf.model.msg.WxUserMessage" parameterType="com.alibaba.fastjson.JSONObject">
		SELECT
			<include refid="wxUserMessageColumns"/>
		FROM
		(SELECT id from  t_wx_user_message t
		<where>
			<if test="openid != null and openid != ''">
				AND t.openid = #{openid}
			</if>
			<if test="type != null and type != ''">
				AND t.type = #{type}
			</if>
			<if test="bizid != null and bizid != ''">
				AND t.bizid = #{bizid}
			</if>
			and flag=#{flag}
		</where>
		 ) b inner join
		t_wx_user_message a  on b.id=a.id
		 <choose>
			<otherwise>
                 ORDER BY photourl desc
			</otherwise>
		</choose>
     limit #{startIndex},#{pageSize}
	</select>

    <select id="getWxUserMessageList" resultType="com.cn.xmf.model.msg.WxUserMessage" parameterType="com.cn.xmf.model.msg.WxUserMessage">
		SELECT
			<include refid="wxUserMessageColumns"/>
		FROM (SELECT id from  t_wx_user_message t
		<where>
			<if test="openid != null and openid != ''">
				AND t.openid = #{openid}
			</if>
			<if test="type != null and type != ''">
				AND t.type = #{type}
			</if>
			<if test="bizid != null and bizid != ''">
				AND t.bizid = #{bizid}
			</if>
			and flag=#{flag}
		</where>
		) b  inner join t_wx_user_message a  on b.id=a.id
		 <choose>
			<otherwise>
                 ORDER BY photourl desc
			</otherwise>
		</choose>
	</select>

       <select id="getSignleWxUserMessage" resultType="com.cn.xmf.model.msg.WxUserMessage" parameterType="com.cn.xmf.model.msg.WxUserMessage">
		SELECT
			<include refid="wxUserMessageColumns"/>
		FROM
		t_wx_user_message a
		<where>
			<if test="openid != null and openid != ''">
				AND a.openid = #{openid}
			</if>
			<if test="type != null and type != ''">
				AND a.type = #{type}
			</if>
			<if test="bizid != null and bizid != ''">
				AND a.bizid = #{bizid}
			</if>
			and flag=#{flag}
		</where>
		limit 1
	</select>


<insert id="add" useGeneratedKeys="true" keyProperty="id">
 <selectKey resultType="long" keyProperty="id" order="AFTER">
        SELECT
        LAST_INSERT_ID()
     </selectKey>
		INSERT INTO t_wx_user_message(
		<if test="id != null">
		 id,
		</if>
		<if test="openid != null">
		 openid,
		</if>
		<if test="type != null">
		 type,
		</if>
		<if test="content != null">
		 content,
		</if>
		<if test="photourl != null">
		 photourl,
		</if>
		<if test="updatetime != null">
		 updatetime,
		</if>
		<if test="flag != null">
		 flag,
		</if>
		<if test="remark != null">
		 remark,
		</if>
		<if test="nickname != null">
		 nickname,
		</if>
		<if test="bizid != null">
		 bizid,
		</if>
		 createtime
		) VALUES (

		 <if test="id != null ">
		  #{id},
		   </if>
		 <if test="openid != null ">
		  #{openid},
		   </if>
		 <if test="type != null ">
		  #{type},
		   </if>
		 <if test="content != null ">
		  #{content},
		   </if>
		 <if test="photourl != null ">
		  #{photourl},
		   </if>
		 <if test="updatetime != null ">
		  #{updatetime},
		   </if>
		 <if test="flag != null ">
		  #{flag},
		   </if>
		 <if test="remark != null ">
		  #{remark},
		   </if>
		 <if test="nickname != null ">
		  #{nickname},
		   </if>
		 <if test="bizid != null ">
		  #{bizid},
		   </if>
		 #{createtime}
		)
	</insert>

  <insert id="addTrainRecordBatch" useGeneratedKeys="true" parameterType="java.util.List">
     <selectKey resultType="long" keyProperty="id" order="AFTER">
        SELECT
        LAST_INSERT_ID()
     </selectKey>
		INSERT INTO t_wx_user_message(
		 id,
		 openid,
		 type,
		 content,
		 photourl,
		 updatetime,
		 flag,
		 remark,
		 nickname,
		 bizid,
		  createtime
		 ) VALUES
 <foreach collection="list" item="item" index="index" separator="," >
		(
		  #{item.id},
		  #{item.openid},
		  #{item.type},
		  #{item.content},
		  #{item.photourl},
		  #{item.updatetime},
		  #{item.flag},
		  #{item.remark},
		  #{item.nickname},
		  #{item.bizid},
		  #{item.createtime}
		)
</foreach>
	</insert>

<update id="updateById">
   UPDATE t_wx_user_message SET
            <if test="openid != null">
            openid = #{openid},
           </if>
            <if test="type != null">
            type = #{type},
           </if>
            <if test="content != null">
            content = #{content},
           </if>
            <if test="photourl != null">
            photourl = #{photourl},
           </if>
            <if test="flag != null">
            flag = #{flag},
           </if>
            <if test="remark != null">
            remark = #{remark},
           </if>
            <if test="nickname != null">
            nickname = #{nickname},
           </if>
            <if test="bizid != null">
            bizid = #{bizid},
           </if>
         updatetime = #{updatetime}
	WHERE id = #{id}
</update>

	<update id="delete">
	UPDATE t_wx_user_message SET
	flag = -1
		WHERE id = #{id}
	</update>
</mapper>